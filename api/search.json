[{"id":"57822ccea2db6aac3d0bb1a67fe9905e","title":"在window系统 使用Hexo + GitHub开发个人博客(二)","content":"写在开头&emsp; &emsp;关于Hexo＋GitHub搭建个人博客，其实我总觉得写这玩意会让我感到很奇怪，因为能看到这篇文章的童鞋肯定也是会写博客的呀,不过还是记录一下，万一有人遇到了和我一样比较小众的问题呢。&emsp; &emsp;安装部署的过程其实并不复杂，但是由于我个人更喜欢分篇幅去展示，所以暂时分为了：安装部署到本地、安装部署到 GitHub 、如何更换主题、一些使用的技巧这么几个部分。\n主要内容\n\n\n\n\n\n\n\n\n&emsp; &emsp;本篇主要介绍如何安装部署 Hexo 到 GitHub，使你的 Hexo 能够在 GitHub 成功运行，希望通过本篇内容的学习，你能够成功的在 GitHub 运行 Hexo 并发布一篇博客。\n连接 GitHub\n\n\n\n\n\n\n\n\n&emsp; &emsp;在开始之前，我们需要拥有一个 GitHub 账号，已经有账号的朋友请跳过此步，直接从创建仓库开始阅读即可&emsp; &emsp;我们可以直接访问GitHub官网连接然后注册账号就好，可能有的朋友会遇到打不开网页或者其他的网络问题，这里有两种解决方案&emsp; &emsp;&emsp; &emsp;1.使用加速器科学上网&emsp; &emsp;&emsp; &emsp;2.修改Host文件\n科学上网\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;可以直接在我的主页里找到推荐加速器，这里推荐了几款免费的梯子（免费的相较于付费的来说，网速、稳定性肯定会差些）；或者你可以直接在浏览器的拓展中装载加速脚本。（暂时没有推荐）\n修改Host\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;除了使用加速器之外，还有一个比较常见的方法，我们在打不开一些网站时也时常会用到，那就是修改你的 Host 文件，这里推荐一款修改 Host 很方便的软件 usbeam hosts editor ，除了一些网页的 Host 修改之外，还能够对 steam 等平台加速，而且完全免费。&emsp; &emsp;这里我们手动修改 Host 即可，首先我们需要分析 GitHub 的域名，我们打开域名分析网站。&emsp; &emsp;将 www.github.com 输入进查询框，点击开始查询后，下面的列表中将会出现所有的分析记录，我们找一个 TTL 值相对大一点的记录，复制它的响应 IP ，然后我们用文本的方式打开我们本地的Host文件（通常存放在C:\\Windows\\System32\\drivers\\etc 路径下），将如下内容粘贴到文本的最下面(不用和我的一样，可能每个人的 IP 都不太一样)。&emsp; &emsp;现在我们应该可以更顺利地访问 GitHub 了。\n创建 GitHub 账号\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;进入 GitHub 官网，点击右上角的 Sigh Up 进入到注册页面。有的朋友会遇到输入了邮箱但是 Continue 按键不亮、无法点击的问题，这要么是你的邮箱格式错误，要么就是这个邮箱已经被用来注册过了。\nGit 连接 GitHub\n&emsp; &emsp;我们打开 Git Bash ，输入如下内容进行用户和邮箱的设置（分别输入，不能一起设置）。\ngit config --global user.name &quot;你的 GitHub 用户名&quot;\ngit config --global user.email &quot;你的 GitHub 邮箱&quot;\n\n创建一个 SSH 密匙\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;设置好用户名和邮箱之后，我们需要生成一个 SSH 密匙，用来真正连接上你的 GitHub ，我们在 Git Bash 中输入ssh-keygen -t rsa -C &quot;你的 GitHub 邮箱&quot;，如果你不需要在你的电脑上连接多个 GitHub 账号的话，一路回车就好，如果未来可能需要连接多个 GitHub 账号的话，可以阅读后续的使用技巧部分。&emsp; &emsp;接下来我们前往 C:\\Users\\Administrator.ssh 目录，目录下有文件 id_rsa.pub （可能被隐藏，要勾选文件管理器\\查看\\展示隐藏项）我们需要用记事本打开，然后将里面的内容复制下来。\n将密匙添加到你的 GitHub 账号中\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;然后打开我们的 GitHub 主页，点击头像、点击 setting、选择左侧边栏中的 SSH and GPG keys ，我们在这里创建一个新的 SSH Key ，title 就是这个 Key 的标题，可以随便取，我们把复制到的 id_rsa.pub 中的内容粘贴到这个新 Key的内容中，点击保存即可。\n验证是否连接成功\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;现在我们理论上是已经连接上了的，保险起见我们需要验证一下。还是在 Git Bash 中，我们输入ssh -T git@github.com，当显示内容“Are you sure……”时，我们输入 yes 然后回车继续，显示 “Hi xxx! You’ve successfully……” 即连接成功，接下来我们就可以创建一个 GitHub Pages 仓库了。\n创建 GitHub Pages 仓库\n\n\n\n\n\n\n\n\n&emsp; &emsp;GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。\n\n回到我们的 GitHub 主页，点击加号 New repository\n在仓库名称中我们一定要输入 你的GitHub用户名.github.io ，这样才能够正常访问。\nDescription 选填\n一定要勾选 Public\n勾选 “Initialize this repository with a README”\n\n将 Hoxe 部署到 GitHub\n\n\n\n\n\n\n\n\n&emsp; &emsp;在部署之前，我们需要先安装一个依赖，还是在 你的博客目录打开 Git Bash ，输入如下内容npm install hexo-deployer-git --save来安装 hexo-deployer-git 依赖，这个依赖能够支持你将 Hexo 部署到 GitHub 上。&emsp; &emsp;然后你需要修改 Hexo 的配置文件，我们打开 Hexo 根目录中的  _config.yml 文件，找到末尾的 Deployment 部分，修改为：\ndeploy:\n  type: git\n  repository: git@github.com:用户名&#x2F;用户名.github.io.git\n  branch: master\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;理论上现在已经能够将你的博客部署到 GitHub 上了，我们在 Git Bash 中输入 Hexo 三连，只不过最后不是hexo s而是hexo d，上传之后并不能立马就打开我们的博客网页，因为会有延迟，我们可以打开我们的 GitHub 仓库，看看里面是否有更新出来的文件，稍等一两分钟之后，访问我们的 GitHub 域名 https://用户名.github.io 就可以看到 Hexo 网站啦！\n发布一篇文章\n\n\n\n\n\n\n\n\n&emsp; &emsp;其实发布文章到 GitHub 和发布文章到本地的步骤类似，输入：$ hexo new [layout] &lt;title&gt;     # layout 是页面布局，title 是文章标题之后，用编辑文档将博客编辑完之后，在 Git Bash 中输入hexo g、hexo d就成功上传了，和部署时一样，会有一些延迟，我们需要等一会才能够看见更新后的页面。\n","slug":"在window系统-使用Hexo+GitHub搭建个人博客-二","date":"2023-03-20T09:15:00.000Z","categories_index":"学到的新东西","tags_index":"Hexo","author_index":"JorayLing"},{"id":"c4c1d35df442af20a77fddd4211243f8","title":"在window系统 使用Hexo + GitHub开发个人博客(一)","content":"写在开头&emsp; &emsp;关于Hexo＋GitHub搭建个人博客，其实我总觉得写这玩意会让我感到很奇怪，因为能看到这篇文章的童鞋肯定也是会写博客的呀,不过还是记录一下，万一有人遇到了和我一样比较小众的问题呢。&emsp; &emsp;安装部署的过程其实并不复杂，但是由于我个人更喜欢分篇幅去展示，所以暂时分为了：安装部署到本地、安装部署到 GitHub 、如何更换主题、一些使用的技巧这么几个部分。\n主要内容\n\n\n\n\n\n\n\n\n&emsp; &emsp;本篇主要介绍如何安装配置 Hexo 到你的本地，使你的 Hexo 能够在本地成功运行，希望通过本篇内容的学习，你能够成功的在本地运行 Hexo 并发布一篇博客。\n部署Hexo的前提\n\n\n\n\n\n\n\n\nwindows操作系统Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)Git\n&emsp; &emsp;如果说你已经安装了Node和Git，那么可以直接看 Hexo 的安装步骤。&emsp; &emsp;如果你的电脑并没有安装Node和Git也没有关系，跟着下面的内容安装就好了。（有些人可能会打不开软件的官网这里放一个清华镜像，大家可以在里面找到想要的镜像，然后自行下载）。\n安装Node\n\n\n\n\n\n\n\n\n&emsp; &emsp;我们可以直接前往Node的官网进行下载。&emsp; &emsp;下载好之后跟着指示一步步安装即可，Windows用户在安装的过程中要注意确保勾选 Add to PATH 选项（默认已勾选）\n安装Git\n\n\n\n\n\n\n\n\n&emsp; &emsp;我们可以直接前往官网下载,同样的，我们跟着指示进行安装。（如果因为网络问题无法下载的话，可以去镜像下载）\n安装Hexo&emsp; &emsp;在前置的软件都安装好了之后，我们就可以进行Hexo的安装了。\n全局安装\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;使用Win+R，输入cmd进入终端，输入以下内容进行全局安装。npm install hexo -g  #-g表示全局安装, npm默认为当前项目安装\n局部安装\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;我们创建一个博客文件夹，在这里存放你的Hexo文件，然后在这个文件夹下进入cmd，输入以下内容。$ hexo init&emsp; &emsp;等待安装完成，我们能够在博客文件夹下看见Hexo的相关文件和文件夹。\n配置HexoHexo三连\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;接下来我们进行“Hexo三连”，在这个目录下点击鼠标右键，进入Git Bash Here.&emsp; &emsp;然后依次输入如下代码。\n$ hexo clean        #可以缩写成 hexo cl ，清除缓存文件 db.json 和已生成的静态文件 public.\n$ hexo generate     #可以缩写成 hexo g ，生成网站静态文件到默认设置的 public 文件夹。\n$ hexo server       #可以缩写成 hexo s ，启动本地服务器，用于预览主题。默认地址： http:&#x2F;&#x2F;localhost:4000&#x2F; \n\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;正常情况下是不会有报错的，我们执行完 hexo s 之后（如下图），就能够通过默认地址： http://localhost:4000/ 进行访问了。&emsp; &emsp;初次使用 Hexo 的主题是自带默认的 landscape 主题，我们访问 http://localhost:4000/ 能够看及本地的博客页面。&emsp; &emsp;我们能够在里面看见一个 Hello World 文章，那是 Hexo 自带的一篇文章，可以删除掉也可以直接在上面进行修改。\nHexo配置\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;在能够本地访问博客之后，我们去配置文件中进行基本配置。配置文件在博客文件根目录（_config.yml），我们用编辑器打开它（可以直接文本打开，也可以用Notepad之类的编辑器，我这里用的是Notepad）。从上往下依次是\n\n\n\n参数\n描述\n\n\n\ntitle\n网站标题\n\n\nsubtitle\n网站副标题\n\n\ndescription\n网站描述\n\n\nkeywords\n网站的关键，词支持多个关键词\n\n\nauthor\n作者名字\n\n\nlanguage\n网站语言，常见的有 zh-Hans和 zh-CN\n\n\ntimezone\n网站时区，我们直接换成 Asia/Shanghai 就好\n\n\n其他地方暂时不用改，我们重新三连一下，会发现网站的样式发生了变化。\n发布博客\n\n\n\n\n\n\n\n\n&emsp; &emsp;在我们的配置工作完成之后，可以进行博客的编辑与发布了。\n创建博客文件\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;我们还是在博客文件的根目录进入 Git Bash Here ，然后输入：$ hexo new [layout] &lt;title&gt;     # layout 是页面布局，title 是文章标题&emsp; &emsp;Hexo 有三种默认的布局：post、page 和 draft，我们也可以使用自定义布局，不同的布局生成的文件地址也各有不同：\n\n\n\n布局\n路径\n\n\n\npost\nsource/_posts\n\n\npage\nsource\n\n\ndraft\nsource/_drafts\n\n\n自定义布局\nsource/_posts\n\n\n&emsp; &emsp;创建完成之后，我们可以去对应的文件路径找到页面文件 .md 。推荐使用VSCode进行编辑。博客页面文件包含变量以及正文两部分，其中变量包括：\n\n\n\n变量\n描述\n\n\n\ntitle\n标题（小写，空格将会被替换为短杠）\n\n\nyear\n建立的年份，比如， 2015\n\n\nmonth\n建立的月份（有前导零），比如， 04\n\n\ni_month\n建立的月份（无前导零），比如， 4\n\n\nday\n建立的日期（有前导零），比如， 07\n\n\ni_day\n建立的日期（无前导零），比如， 7\n\n\n&emsp; &emsp;以上是博客最基础的几个变量，你也可以添加标签、分类等变量，如果后续你有使用其他的 Hexo 主题，那么可能也会有对应的变量格式。编辑完变量之后我们可以在变量下方（用于分区的三个短杠下方）进行正文内容的编辑了，如果是像我一样的博客小白的话，可以去找一个 Markdown 教程网站进行语法的学习，在你熟悉编辑的技巧之后，还可以使用其他的前端语法来使你的博客页面更加美观。\n发布博客\n\n\n\n\n\n\n\n\n\n&emsp; &emsp;无论是部署在本地，还是部署在GitHub，当我们在本地创建、编辑完了新的博客之后，都需要重新“Hexo三连”一次，如果部署在本地，就使用$ hexo s 来启动服务，如果部署在 GitHub 或者 Gitee 上的话，就使用$ hexo d 来将代码上传到 GitHub 或者 Gitee 上。\n&emsp; &emsp;现在我们已经学会了如何安装部署并在本地启动，下一章将展示如何将 Hexo 部署到自己的 GitHub 上并访问。\n","slug":"在window系统-使用Hexo+GitHub搭建个人博客-一","date":"2023-03-17T03:33:52.000Z","categories_index":"学到的新东西","tags_index":"Hexo","author_index":"JorayLing"},{"id":"dc74a604d44a08f12a188ecb560e29b7","title":"为什么要写博客？","content":"&emsp; &emsp; 我认为最高效的学习方法，就是费曼学习法：“教会别人”，倒逼自己主动学习。光靠自己来对知识的掌握程度进行评估，得到的结果往往带有太深的主观色彩，而费曼学习法能够让我在教学中发现自己不足的点。比如：尽管现在我的博客似乎是搭建起来了，但是如果要我再来一遍，我可能没有办法进行下去。所以在此记录下搭建过程，温故而知新的同时，也能给后来者一些帮助，希望看了我的文章，你能够学到新东西。\n\n\n\n\n\n\n\n\n\n\n为什么要写博客？\n&emsp; &emsp; 学习这个动作如果拆分开来说的话很简单，就是思考、记录、使用、分享。在写博客的过程中，就能够把这四个动作都来一遍，并且带来了在这个碎片化阅读的时代所找不到的东西：创造力。&emsp; &emsp;不知道从什么时候开始，我的大脑就好象被什么腌臜糊住了一样，当我要做出一些自主性强的决定或者事件的时候，脑子里的第一个念头是去寻找答案。这显然不合常理，我们应该要想的是如何去做，而不是如何去抄。我解决问题的能力已经快要消失了，早就已经习惯了抄作业。所以，希望可以通过这样的方式来变得更好。\n\n\n\n\n\n\n\n\n\n\n\n思考\n&emsp; &emsp;这个私人博客依然是借鉴了别人的模板，我的思考包括了配色的选择（绿色挺安静的），可能在接下来会换掉的背景图，以及还处于计划阶段的其他页面、插件。除了配色之外，我还添加了jio（左下角的啰嗦小球），他的发言是我一条一条编辑的，可能不算完美，但我觉得也还行。\n\n\n\n\n\n\n\n\n\n\n\n记录\n&emsp; &emsp;我可能会在博客里记录我的日常：随笔、游戏、画画、摄影、音乐、电影、运动、工作、学习到的新东西。现阶段我对写博客这件事还不太熟练，晚上我看见有的人会添加自动上传的脚本，但我还没有去研究那个，现在就只能一篇篇的写啦。&emsp; &emsp;随笔：现在这个应该就算吧。&emsp; &emsp;游戏：我可能会放点截图什么的吧，因为原神什么的也没有特殊的技巧。&emsp; &emsp;画画：会在这里放些线稿之类的东西，就当是存放创意吧。&emsp; &emsp;摄影：做个摄影墙吧，应该挺有意思的。&emsp; &emsp;音乐：还没想好怎么弄，弄个音乐墙吗？&emsp; &emsp;电影：写一些观后感吧，还有电影截图，可能会是电影墙的形式。&emsp; &emsp;运动：打卡？或者说一些心得。&emsp; &emsp;工作：会记录一些工作上的事，但是主要还是记录在了学到的新东西那里吧。&emsp; &emsp;学到的新东西：会把整个操作流程之类的知识记录在这里。\n\n\n\n\n\n\n\n\n\n\n\n使用\n&emsp; &emsp;并不是说搭建好了就不需要完善的，在后续的使用过程中，我一定是还会需要做出很多的调整和修改的，比如加一些插件、加一些页面。同时，在这里进行记录这个过程本身，也是使用它。\n\n\n\n\n\n\n\n\n\n\n\n分享\n&emsp; &emsp;很显然，你们都能够看见我的博客，这是最好的分享，但其实我又不太希望被分享……毕竟我还算内向。\n\n\n\n\n\n\n\n\n\n\n\n进步\n&emsp; &emsp;关于进步，我不知道这会不会成功，但我希望会。\n\n","slug":"hello-Blog","date":"2023-03-16T10:00:00.000Z","categories_index":"随笔","tags_index":"随笔","author_index":"JorayLing"}]